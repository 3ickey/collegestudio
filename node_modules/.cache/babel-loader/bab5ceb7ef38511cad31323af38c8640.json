{"ast":null,"code":"import _classCallCheck from \"/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/src/components/SchoolMap.jsx\";\nimport React, { Component } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from \"leaflet\";\nimport firebase from \"firebase\";\n\nvar SchoolMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SchoolMap, _Component);\n\n  function SchoolMap(props) {\n    var _this;\n\n    _classCallCheck(this, SchoolMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SchoolMap).call(this, props));\n    _this.state = {\n      favSchools: null\n    };\n    _this.changeState = _this.changeState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SchoolMap, [{\n    key: \"changeState\",\n    value: function changeState(data) {\n      this.setState({\n        favSchools: data\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var goldIcon = new L.Icon({\n        iconUrl: require('../imgs/goldstar.png'),\n        iconSize: [20, 20]\n      });\n      this.unAuthSubFunction = firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          firebase.database().ref('users/' + user.uid + '/favorites/').on('value', function (snapshot) {\n            var values = snapshot.val();\n            var favorites = null;\n\n            if (values != null) {\n              favorites = Object.keys(values).map(function (key) {\n                var schoolCenter = [values[key].Lat, values[key].Long];\n                return React.createElement(Marker, {\n                  key: key,\n                  icon: goldIcon,\n                  position: schoolCenter,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 35\n                  },\n                  __self: this\n                }, React.createElement(Popup, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 36\n                  },\n                  __self: this\n                }, React.createElement(\"b\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 37\n                  },\n                  __self: this\n                }, values[key].name), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 37\n                  },\n                  __self: this\n                }), values[key].location));\n              });\n            }\n\n            _this2.changeState(favorites);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.currentUser) {\n        firebase.database().ref('users/' + this.props.currentUser.uid + '/favorites/').off();\n      }\n\n      this.unAuthSubFunction();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var schoolData = this.props.schoolData;\n      var UScenter = [39.8283, -98.5795]; // center of continental US\n\n      var regIcon = new L.Icon({\n        iconUrl: require('../imgs/map-pin.svg'),\n        iconSize: [20, 20]\n      });\n      return React.createElement(Map, {\n        className: \"MapContainer\",\n        center: UScenter,\n        zoom: 4,\n        minZoom: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\" //apikey=b8036ea1bdd04e658ebdde4c8bb56da4\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), Object.keys(schoolData).map(function (key) {\n        var schoolCenter = [schoolData[key].Lat, schoolData[key].Long];\n        return React.createElement(Marker, {\n          key: key,\n          icon: regIcon,\n          position: schoolCenter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, schoolData[key].name), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), schoolData[key].location));\n      }), this.props.displayFavorited ? this.state.favSchools : null);\n    }\n  }]);\n\n  return SchoolMap;\n}(Component);\n\nexport { SchoolMap as default };","map":{"version":3,"sources":["/Users/mickey/Documents/INFO/INFO 340/CollegeStudio/CollegeStudio/src/components/SchoolMap.jsx"],"names":["React","Component","Map","TileLayer","Marker","Popup","L","firebase","SchoolMap","props","state","favSchools","changeState","bind","data","setState","goldIcon","Icon","iconUrl","require","iconSize","unAuthSubFunction","auth","onAuthStateChanged","user","database","ref","uid","on","snapshot","values","val","favorites","Object","keys","map","key","schoolCenter","Lat","Long","name","location","currentUser","off","schoolData","UScenter","regIcon","displayFavorited"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from \"leaflet\";\nimport firebase from \"firebase\";\n\nexport default class SchoolMap extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            favSchools: null\n        }\n\n        this.changeState = this.changeState.bind(this);\n    }\n\n    changeState(data) {\n        this.setState({favSchools: data})\n    }\n    componentDidMount() {\n        const goldIcon = new L.Icon({\n            iconUrl: require('../imgs/goldstar.png'),\n            iconSize: [20, 20],\n        });\n\n        this.unAuthSubFunction = firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.database().ref('users/' + user.uid + '/favorites/').on('value', (snapshot) => {\n                    let values = snapshot.val();\n                    let favorites = null;\n                    if (values != null) {\n                        favorites = (Object.keys(values).map(key => {\n                            let schoolCenter = [values[key].Lat, values[key].Long]\n\n                            return (<Marker key={key} icon={goldIcon} position={schoolCenter}>\n                                <Popup>\n                                    <b>{values[key].name}</b><br/>{values[key].location}\n                                </Popup>\n                            </Marker>)\n                        }));\n                    }\n                    this.changeState(favorites);\n                });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        if (this.props.currentUser) {\n            firebase.database().ref('users/' + this.props.currentUser.uid + '/favorites/').off()\n        }\n        this.unAuthSubFunction()\n    }\n\n    render() {\n        const { schoolData } = this.props;\n        const UScenter = [39.8283, -98.5795] // center of continental US\n\n        const regIcon = new L.Icon({\n            iconUrl: require('../imgs/map-pin.svg'),\n            iconSize: [20, 20],\n        });\n\n\n\n        return (\n           \n            <Map className=\"MapContainer\" center={UScenter} zoom={4} minZoom={4} >\n                <TileLayer\n                    url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\" //apikey=b8036ea1bdd04e658ebdde4c8bb56da4\n                />\n                {\n                    Object.keys(schoolData).map((key) => {\n                        let schoolCenter = [schoolData[key].Lat, schoolData[key].Long]\n\n                        return <Marker key={key} icon={regIcon} position={schoolCenter}>\n                            <Popup>\n                                <b>{schoolData[key].name}</b><br />{schoolData[key].location}\n                            </Popup>\n                        </Marker>;\n                    })\n                }\n                {\n                    this.props.displayFavorited ? this.state.favSchools : null\n                }\n            </Map>\n         \n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}